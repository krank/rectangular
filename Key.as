package
{
	import rectangular.StaticLists;
	import flash.display.FrameLabel;
	import flash.display.MovieClip;
	
	public class Key extends MovieClip
	{
		// lockName, hasLocked and hasUnlocked are all autogenerated.
		public var lockName:String; // The name shared by the lock(s) to be unlocked by this key
		
		private var hasLocked:Boolean = false; // whether or not this key has a 'Locked' frame
		private var hasUnlocked:Boolean = false; // whether or not this key has an 'Un
		
		public function Key():void
		{
			// Generate lockName
			lockName = this.name.substr(0, this.name.indexOf("_"))
			
			// Add this key to the list of all keys
			StaticLists.keys.push(this);
			
			// Check so key has frame labels for "unlocked" and "locked" states.
			// "locked" is used as initial visual state.
			// "unlocked" is triggered when key is picked up.
			
			if (this.currentLabels.length > 0)
			{
				for each (var f:FrameLabel in this.currentLabels)
				{
					if (f.name == "locked")
					{
						hasLocked = true;
						this.gotoAndStop("locked");
					}
					if (f.name == "unlocked")
					{
						hasUnlocked = true;
					}
				}
			}
		
		}
		
		public function unLock():void
		{
			// Find all applicable locks and unlock them if they are found
			
			for each (var lock:Lock in StaticLists.locks)
			{
				if (lock.lockName == this.lockName)
				{
					lock.unLock();
				}
			}
			
			// Regardless, use this key's "unlock" frame, if it exists
			
			if (hasUnlocked)
			{
				this.gotoAndStop("unlocked");
			}
		
		}
	
	}

}